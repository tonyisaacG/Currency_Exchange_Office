// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace Currency_Exchange_Office.Migrations
{
    [DbContext(typeof(DbContextRepository))]
    partial class DbContextRepositoryModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.Client", b =>
                {
                    b.Property<int>("Client_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Client_id"), 1L, 1);

                    b.Property<decimal>("Client_money")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Client_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_phoneNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Client_id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Entities.CRecevier", b =>
                {
                    b.Property<int>("CR_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CR_id"), 1L, 1);

                    b.Property<string>("CR_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CR_phoneNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CR_id");

                    b.ToTable("CReceviers");
                });

            modelBuilder.Entity("Entities.Desposit", b =>
                {
                    b.Property<int>("Despt_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Despt_id"), 1L, 1);

                    b.Property<int>("Client_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Despt_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Despt_money")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Despt_id");

                    b.HasIndex("Client_id");

                    b.ToTable("Desposits");
                });

            modelBuilder.Entity("Entities.Financal_Transaction", b =>
                {
                    b.Property<int>("FT_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FT_id"), 1L, 1);

                    b.Property<int>("CRecevier_id")
                        .HasColumnType("int");

                    b.Property<int>("Client_id")
                        .HasColumnType("int");

                    b.Property<decimal>("FT_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FT_countery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FT_currencyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FT_date")
                        .HasColumnType("datetime2");

                    b.Property<float>("FT_exchangeRate")
                        .HasColumnType("real");

                    b.Property<decimal>("FT_tranferedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FT_transferType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FT_id");

                    b.HasIndex("CRecevier_id");

                    b.HasIndex("Client_id");

                    b.ToTable("Financal_Transactions");
                });

            modelBuilder.Entity("Entities.Sales_voucher", b =>
                {
                    b.Property<int>("SaV_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaV_id"), 1L, 1);

                    b.Property<decimal>("SaV_Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SaV_currencyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SaV_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("SaV_merchantAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaV_paymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SaV_totalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaV_transeferPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Trader_id")
                        .HasColumnType("int");

                    b.HasKey("SaV_id");

                    b.HasIndex("Trader_id");

                    b.ToTable("Sales_Vouchers");
                });

            modelBuilder.Entity("Entities.Shopping_Voucher", b =>
                {
                    b.Property<int>("ShV_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShV_id"), 1L, 1);

                    b.Property<decimal>("ShV_Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShV_currencyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShV_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShV_merchantAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShV_paymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ShV_totalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShV_transeferPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Trader_id")
                        .HasColumnType("int");

                    b.HasKey("ShV_id");

                    b.HasIndex("Trader_id");

                    b.ToTable("Shopping_Vouchers");
                });

            modelBuilder.Entity("Entities.Trader", b =>
                {
                    b.Property<int>("Tad_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Tad_id"), 1L, 1);

                    b.Property<string>("Tad_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tad_phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Tad_id");

                    b.ToTable("Traders");
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Property<int>("User_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_id"), 1L, 1);

                    b.Property<string>("User_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entities.Desposit", b =>
                {
                    b.HasOne("Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("Client_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Entities.Financal_Transaction", b =>
                {
                    b.HasOne("Entities.CRecevier", "CRecevier")
                        .WithMany()
                        .HasForeignKey("CRecevier_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("Client_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CRecevier");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Entities.Sales_voucher", b =>
                {
                    b.HasOne("Entities.Trader", "Trader")
                        .WithMany()
                        .HasForeignKey("Trader_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trader");
                });

            modelBuilder.Entity("Entities.Shopping_Voucher", b =>
                {
                    b.HasOne("Entities.Trader", "Trader")
                        .WithMany()
                        .HasForeignKey("Trader_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trader");
                });
#pragma warning restore 612, 618
        }
    }
}
